{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/Data/TUANANH/workspace/REACTJS/NMS_SSR_myself/pages/_app.js\";\nimport App, { Container } from 'next/app';\nimport React from 'react';\nimport Router from 'next/router';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport AWSAppSyncClient from 'aws-appsync';\nimport createStore from '../redux/store';\nimport { Provider } from 'react-redux';\nimport { Rehydrated } from 'aws-appsync-react';\nimport { ApolloProvider } from 'react-apollo';\nimport '~/styles/pages/_app.scss';\nvar client = new AWSAppSyncClient(currentEnv.app_sync);\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          store = _this$props.store;\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(ApolloProvider, {\n        client: client,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Rehydrated, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Component, _extends({}, pageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, router, ctx, pageProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, router = _ref.router, ctx = _ref.ctx;\n                pageProps = {};\n\n                if (!Component.getInitialProps) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 5;\n                return Component.getInitialProps({\n                  ctx: ctx\n                });\n\n              case 5:\n                pageProps = _context.sent;\n\n              case 6:\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withRedux(createStore)(withReduxSaga(MyApp));","map":{"version":3,"sources":["/Volumes/Data/TUANANH/workspace/REACTJS/NMS_SSR_myself/pages/_app.js"],"names":["App","Container","React","Router","withRedux","withReduxSaga","AWSAppSyncClient","createStore","Provider","Rehydrated","ApolloProvider","client","currentEnv","app_sync","MyApp","props","Component","pageProps","store","router","ctx","getInitialProps"],"mappings":";;;;;;;;;AAAA,OAAOA,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,gBAAP,MAA6B,aAA7B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,cAAT,QAA+B,cAA/B;AAEA,OAAO,0BAAP;AACA,IAAMC,MAAM,GAAG,IAAIL,gBAAJ,CAAqBM,UAAU,CAACC,QAAhC,CAAf;;IAEMC,K;;;;;;;;;;;;;6BAWO;AAAA,wBACmC,KAAKC,KADxC;AAAA,UACGC,SADH,eACGA,SADH;AAAA,UACcC,SADd,eACcA,SADd;AAAA,UACyBC,KADzB,eACyBA,KADzB;AAEL,aACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAgB,QAAA,MAAM,EAAEP,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEO,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CADJ,CADJ,CADJ,CADJ;AAWH;;;;;;;;;;;;AAvB8BD,gBAAAA,S,QAAAA,S,EAAWG,M,QAAAA,M,EAAQC,G,QAAAA,G;AAC1CH,gBAAAA,S,GAAY,E;;qBAEZD,SAAS,CAACK,e;;;;;;uBACML,SAAS,CAACK,eAAV,CAA0B;AAAED,kBAAAA,GAAG,EAAHA;AAAF,iBAA1B,C;;;AAAlBH,gBAAAA,S;;;iDAGK;AAAEA,kBAAAA,SAAS,EAATA;AAAF,iB;;;;;;;;;;;;;;;;;;;EARKjB,G;;AA2BpB,eAAeI,SAAS,CAACG,WAAD,CAAT,CAAuBF,aAAa,CAACS,KAAD,CAApC,CAAf","sourcesContent":["import App, { Container } from 'next/app';\nimport React from 'react';\nimport Router from 'next/router';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport AWSAppSyncClient from 'aws-appsync';\nimport createStore from '../redux/store';\nimport { Provider } from 'react-redux';\nimport { Rehydrated } from 'aws-appsync-react';\nimport { ApolloProvider } from 'react-apollo';\n\nimport '~/styles/pages/_app.scss';\nconst client = new AWSAppSyncClient(currentEnv.app_sync);\n\nclass MyApp extends App {\n    static async getInitialProps({ Component, router, ctx }) {\n        let pageProps = {};\n    \n        if (Component.getInitialProps) {\n          pageProps = await Component.getInitialProps({ ctx });\n        }\n    \n        return { pageProps };\n    }\n\n    render() {\n        const { Component, pageProps, store } = this.props;\n        return (\n            <Container>\n                <ApolloProvider client={client}>\n                    <Rehydrated>\n                        <Provider store={store}>\n                            <Component {...pageProps} />\n                        </Provider>\n                    </Rehydrated>\n                </ApolloProvider>\n            </Container>\n        )\n    }\n}\n\nexport default withRedux(createStore)(withReduxSaga(MyApp));"]},"metadata":{},"sourceType":"module"}